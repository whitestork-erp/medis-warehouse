[
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div class=\"container-fluid mt-4\">\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3\">\n      <div class=\"card\">\n        <div class=\"card-body text-center\">\n          <h4>Start Picking</h4>\n\n          <!--  barcode input  -->\n          <input type=\"text\"\n                 id=\"scanBarcode\"\n                 class=\"form-control form-control-lg\"\n                 placeholder=\"Scan barcode…\"\n                 autocomplete=\"off\"\n                 autofocus>\n\n          <!--  feedback  -->\n          <div id=\"scanFeedback\" class=\"mt-3\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n",
  "modified": "2025-08-28 08:09:45.713115",
  "name": "Scan Item",
  "private": 0,
  "roles": [],
  "script": "\nconst fb = root_element.getElementById('scanFeedback');\n\nroot_element.querySelector('#scanBarcode').addEventListener('keydown', function(event) {\n  event.stopPropagation();\n  fb.innerHTML = ''\n  if (event.key === 'Enter') {\n    event.preventDefault();\n    updateWorkflowState(event);\n  }\n});\n\n// root_element.querySelector('#scanBarcode').addEventListener('keydown', function(event) {\n//   updateWorkflowState(event);\n// });\n\nfunction updateWorkflowState(event) {\nvar barcode = root_element.querySelector('#scanBarcode').value.trim();\nconst box = root_element.getElementById('scanBarcode');\n\n// if (event.key === 'Enter') {\n    console.log(\"------------barcboxode------\",box);\n\n// }\nif (!barcode) return;\nfrappe.call({\n        method: 'medis.api.scan_invoice.transition_to_picking',\n        args: { invoice_barcode: barcode },\n        callback: r => {\n            console.log(\"ANYYY\",r)\n          box.value = '';\n          fb.innerHTML = `<span class=\"${r.message.ok ? 'text-success' : 'text-danger'}\">${r.message.msg}</span>`;\n        //   keepFocus();\n        }\n      });\n}",
  "style": "#scanFeedback { font-weight:bold; }"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div class=\"container-fluid mt-4\">\n  <!-- 1. Invoice scanner  -->\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3\">\n      <input type=\"text\" id=\"invoiceBarcode\"\n             class=\"form-control form-control-lg\"\n             placeholder=\"Scan Invoice barcode first …\"\n             autocomplete=\"off\" autofocus>\n      <div id=\"invoiceFeedback\" class=\"mt-2\"></div>\n    </div>\n  </div>\n\n  <!-- Invoice card (read-only) + Delete -->\n  <div class=\"row mt-3\">\n    <div class=\"col-md-8 offset-md-2\">\n      <div id=\"invoiceCard\" class=\"card d-none\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Invoice <span id=\"invName\"></span>\n            <button id=\"btnDeleteInvoice\" class=\"btn btn-sm btn-danger float-end\">Delete</button>\n          </h5>\n          <p class=\"mb-1\"><strong>Customer:</strong> <span id=\"invCustomer\"></span></p>\n          <p class=\"mb-1\"><strong>Status:</strong>  <span id=\"invStatus\"></span></p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- 2. Item scanner (only visible after invoice) -->\n  <div class=\"row mt-4 d-none\" id=\"itemSection\">\n    <div class=\"col-md-6 offset-md-3\">\n      <input type=\"text\" id=\"itemBarcode\"\n             class=\"form-control form-control-lg\"\n             placeholder=\"Scan item barcode …\"\n             autocomplete=\"off\" disabled>\n      <div id=\"itemFeedback\" class=\"mt-2\"></div>\n    </div>\n  </div>\n\n  <!-- 3. Scanned-items table -->\n  <div class=\"row mt-4 d-none\" id=\"tableSection\">\n    <div class=\"col-md-8 offset-md-2\">\n      <table class=\"table table-bordered\" id=\"scanTable\">\n        <thead>\n          <tr>\n            <th>Item Code</th>\n            <th>Item Name</th>\n            <th style=\"width:120px\">Qty</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <!-- 4. Compare button -->\n  <div class=\"row mt-3 d-none\" id=\"compareSection\">\n    <div class=\"col-md-8 offset-md-2 text-center\">\n      <button id=\"btnCompare\" class=\"btn btn-primary\">Compare with Invoice</button>\n      <div id=\"compareResult\" class=\"mt-3\"></div>\n    </div>\n  </div>\n</div>\n\n<!-- 5. Pack button -->\n<div class=\"row mt-3 d-none\" id=\"packSection\">\n  <div class=\"col-md-8 offset-md-2 text-center\">\n    <button id=\"btnPack\" class=\"btn btn-success\">Pack</button>\n  </div>\n</div>\n",
  "modified": "2025-08-28 12:11:44.935462",
  "name": "Controller Scanning Screen",
  "private": 0,
  "roles": [],
  "script": "(function () {\n  // --- elements ----\n  const invBox = root_element.getElementById(\"invoiceBarcode\");\n  const invFb = root_element.getElementById(\"invoiceFeedback\");\n  const itemBox = root_element.getElementById(\"itemBarcode\");\n  const itemFb = root_element.getElementById(\"itemFeedback\");\n  const tbody = root_element.querySelector(\"#scanTable tbody\");\n  const compareResult = root_element.getElementById(\"compareResult\");\n  const packSection = root_element.getElementById(\"packSection\");\n  const packBtn = root_element.getElementById(\"btnPack\");\n\n  // --- state ----\n  let invoiceDoc = null; // holds complete fetched invoice\n  let scannedMap = new Map(); // {item_code: qty}\n\n  // --- utilities ----\n\n  // prevent global search shortcuts\n  [invBox, itemBox].forEach((box) =>\n    box.addEventListener(\"keydown\", (e) => {\n      e.stopPropagation();\n      if (e.key === \"/\" || (e.ctrlKey && e.key.toLowerCase() === \"k\")) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    })\n  );\n\n  // ---------- 1. invoice scan ----------\n  invBox.addEventListener(\"keydown\", (e) => {\n    if (e.key !== \"Enter\") return;\n    e.preventDefault();\n    fetchInvoice(invBox.value.trim());\n  });\n\n  function fetchInvoice(invoice) {\n    if (!invoice) return;\n    frappe.call({\n      method: \"medis.api.get_invoice_by_barcode.get_invoice_by_barcode\",\n      args: { invoice },\n      callback: (r) => {\n        if (r.message) {\n          invoiceDoc = r.message;\n          renderInvoice(r.message);\n          enableItemSection();\n        } else {\n          invFb.innerHTML =\n            '<span class=\"text-danger\">Invoice not found or wrong status</span>';\n        }\n        invBox.value = \"\";\n      },\n    });\n  }\n\n  function renderInvoice(doc) {\n    root_element.getElementById(\"invName\").textContent = doc.name;\n    root_element.getElementById(\"invCustomer\").textContent = doc.customer;\n    root_element.getElementById(\"invStatus\").textContent = doc.workflow_state;\n\n    // const ul = root_element.getElementById('invItems');\n    // ul.innerHTML = '';\n    // doc.items.forEach(it => {\n    //   ul.insertAdjacentHTML('beforeend',\n    //     `<li class=\"list-group-item d-flex justify-content-between\">\n    //        <span>${it.item_code} – ${it.item_name}</span>\n    //        <span class=\"badge bg-secondary\">${it.qty}</span>\n    //      </li>`);\n    // });\n\n    root_element.getElementById(\"invoiceCard\").classList.remove(\"d-none\");\n    invBox.hidden = true;\n  }\n\n  function enableItemSection() {\n    root_element.getElementById(\"itemSection\").classList.remove(\"d-none\");\n    root_element.getElementById(\"tableSection\").classList.remove(\"d-none\");\n    root_element.getElementById(\"compareSection\").classList.remove(\"d-none\");\n    itemBox.disabled = false;\n    itemBox.focus();\n  }\n\n  // ---------- 2. item scan ----------\n  itemBox.addEventListener(\"keydown\", (e) => {\n    if (e.key !== \"Enter\") return;\n    e.preventDefault();\n    lookupItemByBarcode(itemBox.value.trim());\n  });\n\n  function lookupItemByBarcode(barcode) {\n    if (!barcode) return;\n    frappe.call({\n      method: \"medis.api.get_item_by_barcode.get_item_by_barcode\",\n      args: { barcode },\n      callback: (r) => {\n        if (r.message) {\n          addOrUpdateRow(r.message.item_code, r.message.item_name);\n        } else {\n          itemFb.innerHTML =\n            '<span class=\"text-danger\">Item barcode not found</span>';\n        }\n        itemBox.value = \"\";\n      },\n    });\n  }\n\n  function addOrUpdateRow(code, name) {\n    const qty = (scannedMap.get(code) || 0) + 1;\n    scannedMap.set(code, qty);\n\n    let row = tbody.querySelector(`tr[data-code=\"${code}\"]`);\n    if (row) {\n      row.querySelector(\".qty-input\").value = qty;\n    } else {\n      row = document.createElement(\"tr\");\n      row.dataset.code = code;\n      row.innerHTML = `\n        <td>${code}</td>\n        <td>${name}</td>\n        <td>\n          <input type=\"number\" min=\"0\" value=\"${qty}\" class=\"form-control qty-input\"\n                style=\"width:80px;\" autofocus>\n        </td>`;\n      tbody.appendChild(row);\n    }\n    row.querySelector(\".qty-input\").addEventListener(\"change\", (e) => {\n      const newQty = parseInt(e.target.value || 0);\n      scannedMap.set(code, newQty);\n    });\n  }\n\n  // ---------- 3. delete invoice ----------\n  root_element\n    .getElementById(\"btnDeleteInvoice\")\n    .addEventListener(\"click\", () => {\n      invoiceDoc = null;\n      scannedMap.clear();\n      tbody.innerHTML = \"\";\n      compareResult.innerHTML = \"\";\n\n      root_element.getElementById(\"invoiceCard\").classList.add(\"d-none\");\n      root_element.getElementById(\"itemSection\").classList.add(\"d-none\");\n      root_element.getElementById(\"tableSection\").classList.add(\"d-none\");\n      root_element.getElementById(\"compareSection\").classList.add(\"d-none\");\n\n      invBox.value = \"\";\n      invBox.hidden = false;\n      invBox.focus();\n    });\n\n  // ---------- 4. compare ----------\n  root_element\n    .getElementById(\"btnCompare\")\n    .addEventListener(\"click\", compareWithInvoice);\n\n  function compareWithInvoice() {\n    if (!invoiceDoc) return;\n\n    const invMap = new Map();\n    invoiceDoc.items.forEach((it) => invMap.set(it.item_code, it.qty));\n\n    const missing = [];\n    const extra = [];\n    const mismatch = [];\n\n    // missing / mismatch\n    for (const [code, qty] of invMap) {\n      const scanned = scannedMap.get(code) || 0;\n      if (scanned === 0) missing.push(code);\n      else if (scanned !== qty)\n        mismatch.push(`${code} (needs ${qty}, scanned ${scanned})`);\n    }\n\n    // extra items\n    for (const [code, qty] of scannedMap) {\n      if (!invMap.has(code)) extra.push(`${code} (scanned ${qty})`);\n    }\n\n    let html = \"\";\n    if (missing.length)\n      html += `<p class=\"text-danger\">Missing: ${missing.join(\", \")}</p>`;\n    if (mismatch.length)\n      html += `<p class=\"text-warning\">Mismatch: ${mismatch.join(\", \")}</p>`;\n    if (extra.length)\n      html += `<p class=\"text-info\">Extra: ${extra.join(\", \")}</p>`;\n    // if (!html) html = '<p class=\"text-success\">All items match!</p>';\n\n    compareResult.innerHTML = html;\n    console.log(\"------------!-------\",!html);\n    if (!html) {\n      html = '<p class=\"text-success\">All items match!</p>';\n       console.log(\"------------togglePackButton------\");\n      togglePackButton(true); // show Pack button\n    } else {\n      togglePackButton(false); // hide it\n    }\n    compareResult.innerHTML = html;\n  }\n\n  packBtn.addEventListener(\"click\", () => {\n    const d = new frappe.ui.Dialog({\n      title: \"Confirm Packing\",\n      fields: [\n        {\n          label: \"Number of Packages\",\n          fieldname: \"packages\",\n          fieldtype: \"Int\",\n          reqd: 1,\n          default: 1,\n        },\n      ],\n      primary_action_label: \"Pack & Update\",\n      primary_action: (values) => {\n        frappe.call({\n          method: \"medis.api.pack_invoice.pack_invoice\",\n          args: {\n            invoice: invoiceDoc.name,\n            packages: values.packages,\n            items: Object.fromEntries(scannedMap), // {item_code: qty}\n          },\n          callback: (r) => {\n            if (r.message.success) {\n              frappe.show_alert({\n                message: \"Invoice packed successfully\",\n                indicator: \"green\",\n              });\n              d.hide();\n              // optionally reset the whole screen\n              root_element.getElementById(\"btnDeleteInvoice\").click();\n            } else {\n              frappe.msgprint(r.message.error || \"Error while packing\");\n            }\n          },\n        });\n      },\n    });\n    d.show();\n  });\n\n  function togglePackButton(ok) {\n    if (ok) packSection.classList.remove(\"d-none\");\n    else packSection.classList.add(\"d-none\");\n  }\n})();\n",
  "style": ""
 }
]